<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
global.loaded=0;

music=audio_play_sound(snd_coursebot,0,1);
audio_sound_gain(music,0.75,0);

leveltab_x=46;
leveltab_y=51;
offset=0;
offset_T=0;
max_level_numb=52;

checkX=0;
checkY=0;

goinput=0;
control=1;

global.levelsprite[max_level_numb]=-4;

buttonpos=0;
pagepos=0;

onpage_index=-1;

for(var a=0; a&lt;global.level_numb; a++){
    
    levelsurf[a]=surface_create(62*24 -1,45*24 -1);
    
    surface_set_target(levelsurf[a]);
    draw_clear_alpha(c_black,1);
    
    
    draw_sprite_ext(global.levelsprite[a],0,0,0,1,1,0,c_white,1);
    
    buttonsprite[a]=sprite_create_from_surface(levelsurf[a],0,0,
    62*24,45*24,0,0,0,0);
    
    surface_reset_target();
    surface_free(levelsurf[a]);

}

World=0;
Time=0;
Scroll=0;
ClearCond=-1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Static surfaces

//Get static menu base surface
surf=surface_create(room_width,room_height);
draw_set_font(fnt_mario);

surface_set_target(surf);

draw_set_colour(make_colour_rgb(255,220,0));
draw_rectangle(0,0,room_width,38,0);

draw_primitive_begin(pr_trianglefan);

draw_vertex(0,36);
draw_vertex(8,36);
draw_vertex(40,room_height+2);
draw_vertex(0,room_height+2);

draw_primitive_end();

draw_primitive_begin(pr_trianglefan);

draw_vertex(room_width-40,36);
draw_vertex(room_width,36);
draw_vertex(room_width,room_height+2);
draw_vertex(room_width-8,room_height+2);


draw_primitive_end();

draw_set_colour(c_black);
draw_set_halign(fa_center);draw_set_valign(fa_middle);
draw_set_font(fnt_mario_big);
draw_text_transformed(room_width/2,38/2,"SELECT A LEVEL",0.5,0.5,0);
draw_set_font(fnt_mario);

topsprite=sprite_create_from_surface(surf,0,0,room_width,room_height,0,0,0,0);

surface_reset_target();

surface_free(surf);



//Get static background base surface
surf=surface_create(291,164+54);
surface_set_target(surf);

draw_set_colour(make_colour_rgb(178,195,255));
draw_set_alpha(0.8);
draw_rectangle(2,3,289,164+56,0);

draw_set_alpha(1);
draw_set_colour(c_white);
draw_line_width(1,2,1,164+56,2);
draw_line_width(2,1,288,1,2);
draw_line_width(289,2,289,164+56,2);

backsprite=sprite_create_from_surface(surf,0,0,room_width,room_height,0,0,0,0);

surface_reset_target();

surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(music);

global.makersong=audio_play_sound(snd_ground_maker,0,1);
audio_sound_gain(global.makersong,0.75,0);
global.playsong=audio_play_sound(snd_ground,0,1);
audio_sound_gain(global.playsong,0,0);
room_goto(rm_editor);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_controller.idling=0;

global.state="Selecting a level";
global.details="";
global.icon="rpc_level_select";

offset=lerp(offset,offset_T,0.5);

if(max_level_numb&lt;global.level_numb){max_level_numb=global.level_numb; global.levelsprite[max_level_numb+1]=-4;}





if(control){

if(onpage_index==-1){

//Move through the menu
if(keyboard_check_pressed(vk_up)){
   goinput=0;
   if(buttonpos&gt;3){
      buttonpos-=4;
      if(buttonpos&gt;7){
      if(checkY==0){offset_T+=55; checkY=0;}else{checkY--;}
      }else{
      if(checkY==0){offset_T=0; checkY=0;}else{checkY--;}
      }
   }
}

if(keyboard_check_pressed(vk_down)){
   goinput=0;
   if(buttonpos&lt;max_level_numb-4){
      buttonpos+=4;
      if(checkY==2){offset_T-=55; checkY=2;}else{checkY++;}
   }
   
}

if(keyboard_check_pressed(vk_right)){
   goinput=0;
   if(checkX&lt;3){checkX++; buttonpos++;}
}

if(keyboard_check_pressed(vk_left)){
   goinput=0;
   if(checkX&gt;0){checkX--; buttonpos--;}
}

if(goinput&lt;20){goinput++;}else{
   
if(keyboard_check(vk_up)){
   goinput=10;
   if(buttonpos&gt;3){
      buttonpos-=4;
      if(buttonpos&gt;7){
      if(checkY==0){offset_T+=55; checkY=0;}else{checkY--;}
      }else{
      if(checkY==0){offset_T=0; checkY=0;}else{checkY--;}
      }
   }
}

if(keyboard_check(vk_down)){
   goinput=10;
   if(buttonpos&lt;max_level_numb-4){
      buttonpos+=4;
      if(checkY==2){offset_T-=55; checkY=2;}else{checkY++;}
   }
   
}

if(keyboard_check(vk_right)){
   goinput=10;
   if(checkX&lt;3){checkX++; buttonpos++;}
}

if(keyboard_check(vk_left)){
   goinput=10;
   if(checkX&gt;0){checkX--; buttonpos--;}
}

}

//Select a level
if(keyboard_check_pressed(vk_space)&amp;&amp;(onpage_index==-1)){
   
   if(buttonpos&lt;global.level_numb){
   
   /*global.level_filename=global.levelname[buttonpos];
   global.new_filename=string_delete(global.level_filename,string_length(global.level_filename)-3,4);
   room_goto(rm_editor);*/
   pagepos=0;
   onpage_index=buttonpos;
   event_user(0);
   
   }else{
     /*room_goto(rm_editor);
     global.level_filename="";*/
     pagepos=0;
     onpage_index=-2;
   }
   goinput=0;
   
   
}

}else{
 
 /*if(keyboard_check_pressed(vk_right)||keyboard_check_pressed(vk_left)){
    pagepos=!pagepos;
    goinput=0;
 }
 
 if(goinput&lt;20){goinput++;}else{
    if(keyboard_check(vk_right)||keyboard_check(vk_left)){
    goinput=10;
    pagepos=!pagepos;
    goinput=0;
    }
 }*/

}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load some file info
var file = file_text_open_read("Levels\"+string(global.levelname[buttonpos]));

    var items = real(file_text_read_string(file));
        
        file_text_readln(file);
          
        var buffer = (file_text_read_string(file));
          
file_text_close(file);

var levelmap = /*ds_grid_read_buffer(buffer);*/ds_grid_create(11,items+1);
    //Convert the buffer into a ds grid
    ds_grid_read(levelmap,buffer);
    
        //var items = ds_grid_get(levelmap,0,0);
        World=real(ds_grid_get(levelmap,1,0));
        Time=real(ds_grid_get(levelmap,2,0));
        Scroll=real(ds_grid_get(levelmap,3,0));
        ClearCond=real(ds_grid_get(levelmap,4,0));
        
ds_grid_destroy(levelmap);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free everything
for(var a=0; a&lt;global.level_numb; a++){
    sprite_delete(buttonsprite[a]);
}

sprite_delete(topsprite);
sprite_delete(backsprite);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw menu
draw_sprite_ext(backsprite,0,leveltab_x,leveltab_y+max(offset,-53),1,1,0,c_white,1);



var y_button_offset=0;
var xpos=0;

for(var a=0; a&lt;max_level_numb; a++){
 
    var X= leveltab_x+9+ 70*xpos;
    var Y= leveltab_y+8+ 54*y_button_offset+offset;
    
    if(buttonpos==xpos+(4*y_button_offset)){
       draw_set_colour(make_colour_rgb(255,216,0));
       draw_rectangle(X-2,Y-3,X+62+3,Y+45+2,0);
       draw_set_colour(c_white);
    }
    
   if(Y&lt;room_height+1)&amp;&amp;(Y&gt;-65){
   
    if(a&lt;global.level_numb){
      draw_sprite_stretched(buttonsprite[a],0,
      X, Y,62,45);
    }else{
    
      draw_set_colour(c_black);
      draw_rectangle(X,Y,X+62-1,Y+45-1,0);
      draw_set_colour(c_white);
      draw_sprite_stretched_ext(spr_nothumbnail,0,
      X, Y,62,45,c_white,0.4);
    }
    
    draw_set_colour(c_white);
    draw_line_width(X,Y-1,X,Y+45-1,2);
    draw_line_width(X,Y-1,X+62,Y-1,2);
    draw_line_width(X+62,Y-1,X+62,Y+45-1,2);
    draw_line_width(X,Y+45-1,X+62,Y+45-1,2);

   } 
    
    xpos++;
    
    if(xpos&gt;3){
       y_button_offset++;
       xpos=0;
    }
       

}



draw_sprite_ext(topsprite,0,0,0,1,1,0,c_white,1);

//Level button
if(onpage_index!=-1){

   if(onpage_index&gt;-1){
    var levelstring=string_delete(global.levelname[buttonpos],string_length(global.levelname[buttonpos])-3,4);
   }else{
    var levelstring="Empty level";
   }
      
   
   draw_set_alpha(0.4);
   draw_set_colour(c_black);
   draw_rectangle(0,0,room_width,room_height,0);
   draw_set_alpha(1);
   
   draw_set_colour(make_colour_rgb(178,195,255));
   
   var X1=room_width/2-62-8;var X2=room_width/2+62+8;
   
   if(string_width(levelstring)/2&gt;X2-X1){
      X1=room_width/2-string_width(levelstring)/4-8;
      X2=room_width/2+string_width(levelstring)/4+8;
   }
   
   var Y1=room_height/2-45*2-8;
   var Y2=room_height/2+45*2+8;
   
   draw_rectangle(X1+1,Y1,X2-1,Y2-1,0);
   
   if(onpage_index&gt;-1){
   draw_set_colour(c_white);
   }else{
   draw_set_colour(c_black);
   
   }
   
   
   draw_rectangle(X1+(X2-X1)/2-62-2,Y1+(Y2-Y1)/2-45*2+10-2,
   X1+(X2-X1)/2+62+2,Y1+(Y2-Y1)/2+11,0);
   
   draw_set_colour(c_white);
   draw_line_width(X1,Y1,X1,Y2,2);
   draw_line_width(X1,Y1,X2,Y1,2);
   draw_line_width(X2,Y1,X2,Y2,2);
   draw_line_width(X1,Y2,X2,Y2,2);
   
   
   
   if(onpage_index&gt;-1){
    draw_sprite_stretched(buttonsprite[onpage_index],0,X1+(X2-X1)/2-62,
    Y1+(Y2-Y1)/2-45*2+10,62*2,45*2);
   }else{
    draw_set_alpha(0.4);
    draw_sprite_stretched(spr_nothumbnail,0,X1+(X2-X1)/2-62,
    Y1+(Y2-Y1)/2-45*2+10,62*2,45*2);
    draw_set_alpha(1);
   }
   
   draw_set_colour(c_black);
   draw_set_halign(fa_center); draw_set_valign(fa_top);
   draw_text_transformed(X1+(X2-X1)/2,Y1+5,
   levelstring,0.5,0.5,0);
   
   if(onpage_index&gt;-1){
   draw_text_transformed(X1+(X2-X1)/2,Y1+(Y2-Y1)/2+16,
   "World : Plains"+
   "#Time :"+string_replace_all(string_format(Time,3,0)," ","0")+
   "#Srcoll: Normal"
   ,0.5,0.5,0);
   }
   
   draw_set_valign(fa_bottom);
   
   draw_text_transformed(X1+(X2-X1)/2,Y2-4,
   "SPACE - Edit"+
   "#ESC - Back"
   ,0.5,0.5,0);

   if(goinput&lt;11){goinput++;}
   
   if(keyboard_check_pressed(vk_escape)&amp;&amp;(goinput&gt;10)){
      onpage_index=-1;
   }
   
   if(keyboard_check_pressed(vk_space)&amp;&amp;(goinput&gt;10)){
      goinput=-999;
      
      if(onpage_index&gt;-1){
      
         if(onpage_index&lt;global.level_numb){
           global.level_filename=global.levelname[onpage_index];
           global.new_filename=string_delete(global.level_filename,string_length(global.level_filename)-3,4);
         }else{
           global.level_filename="";
           global.new_filename="Level";
         }
      
      }
      obj_controller.fade=1;
      alarm[0]=30;
   }
   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
