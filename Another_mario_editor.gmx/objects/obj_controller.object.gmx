<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.debug=0;

ViewXoffset=0;
ViewYoffset=0;

enum input {
   left, right, up, down, action0, action1, start
}

global.keyboard[input.left]=vk_left;
global.keyboard[input.right]=vk_right;
global.keyboard[input.up]=vk_up;
global.keyboard[input.down]=vk_down;
global.keyboard[input.action0]=vk_space;
global.keyboard[input.action1]=vk_shift;
global.keyboard[input.start]=vk_enter;

global.button[input.left]=gp_padl;
global.button[input.right]=gp_padr;
global.button[input.up]=gp_padu;
global.button[input.down]=gp_padd;
global.button[input.action0]=gp_face1;
global.button[input.action1]=gp_face3;
global.button[input.start]=gp_start;


Window_W=room_width;
Window_H=room_height;

Window_S=3;

vSync=0;

fullscreen=0;

application_surface_draw_enable(false);
surface_resize(application_surface,Window_W*5,Window_H*5);

event_user(0);

global.cursor=spr_cursor;
global.cursor_angle=0;


enum Attributes {
     Mushroom = 0,
     Wings = 1,
     Direction = 2,
     Parachute = 3,
     Width = 4,
     Height = 5
}

global.switchstate=0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize enitity ids
global.tileset=background_add("Tiles\Tile_ground.png",1,0);

global.entitymap=ds_map_create();

ds_map_add(global.entitymap,"Semis",obj_semisolid);
ds_map_add(global.entitymap,"Ground",obj_solid);//Still dunno how I'd handle walls
ds_map_add(global.entitymap,"Coin",obj_coin);
ds_map_add(global.entitymap,"MetalBlock",obj_metal_block);
ds_map_add(global.entitymap,"FlipBlock",obj_flipblock);
ds_map_add(global.entitymap,"QuestBlock",obj_question_block);
ds_map_add(global.entitymap,"InvBlock",obj_inv_block);
ds_map_add(global.entitymap,"Spiketrap",obj_spiketrap);
ds_map_add(global.entitymap,"OnOff_switch",obj_onoff_switch);
ds_map_add(global.entitymap,"OnOff_block_ON",obj_onoff_block_red);
ds_map_add(global.entitymap,"OnOff_block_OFF",obj_onoff_block_blue);
ds_map_add(global.entitymap,"Cloud",obj_cloud);
ds_map_add(global.entitymap,"Arrow",obj_arrow);

//Set tile positions
global.tileposX=ds_map_create();

ds_map_add(global.tileposX,"Coin",1);
ds_map_add(global.tileposX,"MetalBlock",18);
ds_map_add(global.tileposX,"FlipBlock",35);
ds_map_add(global.tileposX,"QuestBlock",52);
ds_map_add(global.tileposX,"InvBlock",69);
ds_map_add(global.tileposX,"Spiketrap",86);
ds_map_add(global.tileposX,"OnOff_switch",103);
ds_map_add(global.tileposX,"OnOff_block_ON",137);
ds_map_add(global.tileposX,"OnOff_block_OFF",188);
ds_map_add(global.tileposX,"Cloud",205);


global.tileposY=ds_map_create();

ds_map_add(global.tileposY,"Coin",1);
ds_map_add(global.tileposY,"MetalBlock",1);
ds_map_add(global.tileposY,"FlipBlock",1);
ds_map_add(global.tileposY,"QuestBlock",1);
ds_map_add(global.tileposY,"InvBlock",1);
ds_map_add(global.tileposY,"Spiketrap",1);
ds_map_add(global.tileposY,"OnOff_switch",1);
ds_map_add(global.tileposY,"OnOff_block_ON",1);
ds_map_add(global.tileposY,"OnOff_block_OFF",1);
ds_map_add(global.tileposY,"Cloud",1);

//Set sprites
/*
This is for the UI icons
*/
global.spritemap=ds_map_create();

ds_map_add(global.spritemap,"Semis",spr_semisolid);
ds_map_add(global.spritemap,"Ground",spr_solid);
ds_map_add(global.spritemap,"Coin",spr_coin);
ds_map_add(global.spritemap,"MetalBlock",spr_metal_block);
ds_map_add(global.spritemap,"FlipBlock",spr_flipblock);
ds_map_add(global.spritemap,"QuestBlock",spr_question_block);
ds_map_add(global.spritemap,"InvBlock",spr_invisible_block);
ds_map_add(global.spritemap,"Spiketrap",spr_spiketrap);
ds_map_add(global.spritemap,"OnOff_switch",spr_onoff_switch_on);
ds_map_add(global.spritemap,"OnOff_block_ON",spr_onoff_block_red);
ds_map_add(global.spritemap,"OnOff_block_OFF",spr_onoff_block_blue);
ds_map_add(global.spritemap,"Cloud",spr_cloud);
ds_map_add(global.spritemap,"Arrow",spr_arrow_icon);

//Object type
global.entityclass=ds_map_create();

ds_map_add(global.entityclass,"Semis",0);
ds_map_add(global.entityclass,"Ground",0);
ds_map_add(global.entityclass,"Coin",1);
ds_map_add(global.entityclass,"MetalBlock",0);
ds_map_add(global.entityclass,"FlipBlock",0);
ds_map_add(global.entityclass,"QuestBlock",0);
ds_map_add(global.entityclass,"InvBlock",0);
ds_map_add(global.entityclass,"Spiketrap",0);
ds_map_add(global.entityclass,"OnOff_switch",3);
ds_map_add(global.entityclass,"OnOff_block_ON",3);
ds_map_add(global.entityclass,"OnOff_block_OFF",3);
ds_map_add(global.entityclass,"Cloud",0);
ds_map_add(global.entityclass,"Arrow",3);


for(var a=0; a&lt;12; a++){ global.selected_entity[a]="Coin"; }
global.selected_entity[0]="MetalBlock";global.selected_entity[1]="FlipBlock";
global.selected_entity[2]="QuestBlock";global.selected_entity[3]="InvBlock";
global.selected_entity[4]="Spiketrap";global.selected_entity[4]="OnOff_switch";
global.selected_entity[5]="OnOff_block_ON";global.selected_entity[6]="OnOff_block_OFF";
global.selected_entity[7]="Cloud";global.selected_entity[8]="Arrow";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_enter)){
   fullscreen=!fullscreen;
   event_user(0);
}

for(var a=0; a&lt;=5; a++){
   if(keyboard_check_pressed(ord(string(a)))){
      Window_S=a-1;
      event_user(0);
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
display_set_gui_size(Window_W,Window_H);

display_reset(0,vSync);

window_set_size(Window_W*(Window_S+1),Window_H*(Window_S+1));

window_set_fullscreen(fullscreen);

alarm[0]=1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("Went to room "+string(room_get_name(room)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> var file=file_text_open_write("Settings.dat");
   
   
   file_text_write_string(file,string(Window_S));
   file_text_writeln(file);

   file_text_write_string(file,string(vSync));
   file_text_writeln(file);

   file_text_write_string(file,string(fullscreen));
   file_text_writeln(file);
   
   
   file_text_close(file);
   
directory_destroy("Temp");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(file_exists("Settings.dat")){
   
   var file=file_text_open_read("Settings.dat");
   
   
   Window_S=real(file_text_read_string(file));
   file_text_readln(file);

   vSyncreal=real(file_text_read_string(file));
   file_text_readln(file);

   fullscreen=real(file_text_read_string(file));
   file_text_readln(file);
   
   
   file_text_close(file);


}else{

  Window_S=3;

  vSync=0;

  fullscreen=0;

}

event_user(0);

room_goto_next();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode_ext(bm_one, bm_inv_src_alpha);
draw_surface_stretched(application_surface,0,0,window_get_width(),window_get_height());
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_colour(c_black);
draw_text_transformed(2,2,
"FPS:"+string(fps)+"#Room W:"+string(room_width)+"#View X:"+string(view_xview)
,0.5,0.5,0);
draw_set_colour(c_white);

depth=-10;
draw_sprite_ext(global.cursor,0,device_mouse_x_to_gui(0)+8,device_mouse_y_to_gui(0)+8,
0.2,0.2,global.cursor_angle,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
